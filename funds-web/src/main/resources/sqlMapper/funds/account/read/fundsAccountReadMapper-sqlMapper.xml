<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gqhmt.funds.architect.account.mapper.read.FundsAccountReadMapper">
 
	<sql id="fieldSql">
		  SELECT
		  	 id,
			 cust_id custId,
			 amount,
			 freeze_amount freezeAmount,
			 account_type accountType,
			 busi_type busiType,
			 parent_id parentId,
			 CREATE_TIME createTime,
			 MODIFY_TIME modifyTime,
			 account_no accountNo,
			 user_id userId,
			 has_Third_Account hasThirdAccount,
			 user_name userName,
			 cust_name custName,
			 settle_type settleType,
			 is_change_bank_card ishangeBankCard,
			 bankNo,
			 parent_bank_id parentBankId,
			 city_id cityId
		  FROM
			 t_gq_fund_account
	</sql>


	<select id="queryFundAccountByCutId" resultType="com.gqhmt.funds.architect.account.entity.FundAccountEntity">
		<include refid="fieldSql" />
		where cust_id = #{cusID} and busi_type = #{type}
	</select>

	<select id="queryFundAccountsByCutId" resultType="com.gqhmt.funds.architect.account.entity.FundAccountEntity">
		<include refid="fieldSql" />
		where cust_id = #{custId}
	</select>

	<!-- 账户管理 -->
	<select id="findAcountList" parameterType="java.util.Map" resultType="com.gqhmt.funds.architect.account.bean.FundAccountCustomerBean">
		SELECT
		b.id id,
		a.CUSTOMER_NAME	customerName,
		a.SEX sex,
		a.CERT_NO certNo,
		a.MOBILE_PHONE mobilePhone,
		b.account_type accountType,
		b.busi_type busiType,
		b.cust_id custId,
		b.account_no accountNo,
		b.amount amount,
		b.CREATE_TIME creatTime,
		b.freeze_amount freezeAmount,
		b.has_Third_Account hasThirdAccount
		FROM `t_gq_customer_info` a RIGHT JOIN `t_gq_fund_account` b ON a.ID=b.cust_id
		<where>
			and b.busi_type=0
			<if test="custId=='101'">
				and b.cust_id &gt; 100
			</if>
			<if test="custId=='99'">
				and b.cust_id  &lt; 100
			</if>
			<if test="customerName != null and customerName != ''">
				and a.CUSTOMER_NAME like concat('%',#{customerName},'%')
			</if>
			<if test="mobilePhone!= null and  mobilePhone!=''">
				and a.MOBILE_PHONE like concat('%',#{mobilePhone},'%')
			</if>
			<if test="startTime != null and startTime != '' ">
				and date_format(b.create_time,'%Y%m%d') &gt;= #{startTime}
			</if>
			<if test="endTime != null and endTime != '' ">
				and date_format(b.create_time,'%Y%m%d') &lt;= #{endTime}
			</if>
		</where>
	</select>
<!-- 	找到指定的客户 -->
	<select id="fundAccountCustomerById" parameterType="java.lang.Integer" resultType="com.gqhmt.funds.architect.account.bean.FundAccountCustomerBean">
		 SELECT 
		b.id id,
		a.CUSTOMER_NAME	customerName,
		a.SEX sex,
		a.CERT_NO certNo,
		a.MOBILE_PHONE mobilePhone,
		b.account_type accountType,
		b.busi_type busiType,
		b.cust_id custId,
		b.account_no accountNo,
		b.amount amount,
		b.CREATE_TIME creatTime,
		b.freeze_amount freezeAmount,
		b.has_Third_Account hasThirdAccount
		FROM `t_gq_customer_info` a , `t_gq_fund_account` b where a.ID=b.user_id and b.id=#{withHoldId}
	</select>
	
	
	<select id="getAccountBanlance" resultType="com.gqhmt.funds.architect.account.entity.FundAccountEntity">
		<include refid="fieldSql" />
		where cust_id = ${cust_no} and busi_type = ${busi_type}
	</select>
	
	<select id="selectFundAccountEntity" parameterType="java.lang.String" resultType="com.gqhmt.funds.architect.account.entity.FundAccountEntity">
		SELECT
		  	 id,
			 cust_id custId,
			 amount,
			 freeze_amount freezeAmount,
			 account_type accountType,
			 busi_type busiType,
			 parent_id parentId,
			 CREATE_TIME createTime,
			 MODIFY_TIME modifyTime,
			 account_no accountNo,
			 user_id userId,
			 has_Third_Account hasThirdAccount,
			 user_name userName,
			 cust_name custName,
			 settle_type settleType,
			 is_change_bank_card ishangeBankCard
		  FROM
			 t_gq_fund_account
		WHERE account_no = #{accNo}
	</select>

	<select id="getFundsAccountByBusiType" parameterType="java.lang.String" resultType="com.gqhmt.funds.architect.account.entity.FundAccountEntity">
		<include refid="fieldSql" />
		where busi_type = #{busi_type}
		order by CREATE_TIME desc
	</select>

	<select id="queryFundAccountByUserName" resultType="com.gqhmt.funds.architect.account.entity.FundAccountEntity">
		<include refid="fieldSql" />
		where user_name=#{userName}
		and busi_type = #{type}
		order by CREATE_TIME desc
	</select>

	<!--查询所有的红包账户 -->
	<select id="getRedAccountList" parameterType="java.util.List" resultType="com.gqhmt.funds.architect.account.entity.FundAccountEntity">
		SELECT
		  	 acc.id id,
			 acc.cust_id custId,
			 acc.amount amount,
			 acc.freeze_amount freezeAmount,
			 acc.account_type accountType,
			 acc.busi_type busiType,
			 acc.parent_id parentId,
			 acc.CREATE_TIME createTime,
			 acc.MODIFY_TIME modifyTime,
			 acc.account_no accountNo,
			 acc.user_id userId,
			 acc.has_Third_Account hasThirdAccount,
			 acc.user_name userName,
			 acc.cust_name custName,
			 acc.settle_type settleType,
			 acc.is_change_bank_card ishangeBankCard,
			 acc.bankNo,
			 acc.parent_bank_id parentBankId,
			 acc.city_id cityId
		  FROM
			 t_gq_fund_account acc
		  WHERE acc.cust_id in
		<foreach collection="list" item="custId" index="index"
				 open="(" close=")" separator=",">
			#{custId}
		</foreach>
		  AND acc.busi_type=0
	</select>

	<select id="findAllFundAcountList" resultType="com.gqhmt.funds.architect.account.bean.FundAccountCustomerBean">
		SELECT
			c.id id,
			c.customer_name customerName,
			c.customer_type customerType,
			c.cert_no certNo,
			c.cert_type certType,
			t.account_type accountType,
			t.busi_type busiType,
			t.cust_id custId
		FROM `t_gq_fund_account` t LEFT JOIN `t_gq_customer_info`c on c.id=t.cust_id
	</select>

	<select id="findFundAccountByDate" resultType="com.gqhmt.funds.architect.account.bean.FundAccountCustomerBean">
		SELECT
			c.id id,
			c.customer_name customerName,
			c.customer_type customerType,
			c.cert_no certNo,
			c.cert_type certType,
			t.account_type accountType,
			t.busi_type busiType,
			t.cust_id custId
		FROM `t_gq_fund_account` t LEFT JOIN `t_gq_customer_info`c on c.id=t.cust_id
		WHERE date_format(t.create_time,'%Y%m%d') = #{date} and t.busi_type BETWEEN 0 and 99 ORDER BY c.id,t.busi_type

	</select>
</mapper>
